#!/bin/bash

# ======================= CONFIGURACIÓN =======================
# Directorio del proyecto. La ruta debe ser absoluta.
PROJECT_DIR="/home/cp200807" # Asegúrate que esta sea la ruta correcta en el clúster

# Nombres de los ejecutables
SEQ_EXEC="${PROJECT_DIR}/august/sequential_quicksort"
PAR_EXEC="${PROJECT_DIR}/parallel_quicksortV2"

# Ruta absoluta a mpirun para asegurar que el cron encuentre
MPIRUN_EXEC="/opt/mpich2/bin/mpirun" # Asegúrate que esta sea la ruta correcta en el clúster

# Lista de archivos de datos de entrada a probar
INPUT_FILES=(
    "${PROJECT_DIR}/numeros_10M_MaxInt.txt"
    "${PROJECT_DIR}/numeros_5M_maxint.txt"
)

# Archivo donde se guardarán los resultados
LOG_FILE="${PROJECT_DIR}/resultados_tests.txt"

# Lista de número de procesos para probar la versión paralela
PROCESSOR_COUNTS="2 4 8"
# =============================================================

# --- Función para ejecutar la batería de pruebas para un archivo ---
run_tests_for_file() {
    local input_file="$1"
    local filename=$(basename "$input_file")

    echo "" >> "$LOG_FILE"
    echo "###########################################################" >> "$LOG_FILE"
    echo "# PRUEBAS CON ARCHIVO: $filename" >> "$LOG_FILE"
    echo "###########################################################" >> "$LOG_FILE"

    # 1. Ejecutar la prueba secuencial
    echo "" >> "$LOG_FILE"
    echo "--- Prueba Secuencial ($filename) ---" >> "$LOG_FILE"
    if [ -f "$SEQ_EXEC" ]; then
        "$SEQ_EXEC" "$input_file" >> "$LOG_FILE" 2>&1
    else
        echo "Error: El ejecutable '$SEQ_EXEC' no fue encontrado." >> "$LOG_FILE"
    fi

    # 2. Ejecutar las pruebas paralelas
    echo "" >> "$LOG_FILE"
    echo "--- Pruebas Paralelas ($filename) ---" >> "$LOG_FILE"
    if [ -f "$PAR_EXEC" ]; then
        for NP in $PROCESSOR_COUNTS; do
            echo "" >> "$LOG_FILE"
            echo "Ejecutando con $NP procesos..." >> "$LOG_FILE"
            "$MPIRUN_EXEC" -np "$NP" "$PAR_EXEC" "$input_file" >> "$LOG_FILE" 2>&1
        done
    else
        echo "Error: El ejecutable '$PAR_EXEC' no fue encontrado." >> "$LOG_FILE"
    fi
}

# --- INICIO DEL SCRIPT ---

# Limpia el log anterior y añade una marca de tiempo de inicio
echo "============================================================" > "$LOG_FILE"
echo "INICIO DE PRUEBAS: $(date)" >> "$LOG_FILE"
echo "============================================================" >> "$LOG_FILE"

# Itera sobre la lista de archivos y ejecuta las pruebas para cada uno
for file_to_test in "${INPUT_FILES[@]}"; do
    # Verifica si el archivo de entrada existe antes de intentar usarlo
    if [ -f "$file_to_test" ]; then
        run_tests_for_file "$file_to_test"
    else
        echo "" >> "$LOG_FILE"
        echo "ADVERTENCIA: El archivo de entrada '$file_to_test' no fue encontrado. Saltando pruebas." >> "$LOG_FILE"
    fi
done

echo "" >> "$LOG_FILE"
echo "FIN DE PRUEBAS: $(date)" >> "$LOG_FILE"
echo "============================================================" >> "$LOG_FILE"

